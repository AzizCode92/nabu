[nnet]
#name of the modeule holding the classifier
module = wavenet
#name of the Classifier classifiers
class = Wavenet
#name of the neural net
name = wavenet_5layers_3blocks
#the number of filters in each layer
num_units = 256
#the kernel_size
kernel_size = 7
#set to True if you want to have causal convolutions in the wavenet
causal = False
#number of layers in each block
num_layers = 5
#the number of blocks
num_blocks = 3
#starting step, set to 'final' to skip nnet training
starting_step = 0
#number of passes over the entire database
num_epochs = 100
#initial learning rate of the neural net
initial_learning_rate = 1e-3
#exponential weight decay parameter
learning_rate_decay = 1
#size of the minibatch (#utterances)
batch_size = 8
#number of minibatches to aggregate before updating the parameters
numbatches_to_aggregate = 2
#if there is no dev set q dev set will be creqted from the training set, this
#sets the number of training batches that will be used for validation
valid_utt = 16
#frequency of evaluating the validation set. CATION: If the valid_frequency is
#more than 5 times larger than the checkpoint frequency the validated model
#will be deleted by the saver
valid_frequency = 1000
#if you want to adapt the learning rate based on the validation set, set to True
valid_adapt = True
#number of times the learning will retry (with half learning rate) before
#terminating the training
valid_retries = 3
#how many steps are taken between two checkpoints
check_freq = 500
#you can visualise the progress of the neural net with tensorboard
visualise = True
#the beam width for the decoding
beam_width = 100
